
> corejs-conditions-n-loops@1.0.0 test
> npm run lint && mocha


> corejs-conditions-n-loops@1.0.0 lint
> node node_modules/eslint/bin/eslint.js ./src



  core-js-conditions-n-loops
    √ isPositive should return a boolean value whether a number is positive
    √ getMaxNumber should return the maximum of three numbers
    √ canQueenCaptureKing should return true if a queen can capture a king
    √ isIsoscelesTriangle should return boolean whether the triangle is isosceles
    √ convertToRomanNumerals should return the number converted to Roman numerals
    √ convertNumberToString should the original number as a string with numbers replaced by words
    √ isPalindrome should return a boolean value whether a string is palindrome
    √ getIndexOf should return a bool value if the string contains the desired letter
    √ isContainNumber should bool value whether the number contains the desired digit
    √ getBalanceIndex should returns the index of the balancer element
    √ getSpiralMatrix should return a matrix of size * size that is filled with numbers in ascending order
    √ rotateMatrix should return the original array rotated by an angle of 90 degrees clockwise
    √ sortByAsc should return a sorted array
    √ shuffleChar should return a string in which characters with an odd index are moved to the end of the string at each iteration
    √ getNearestBigger should return the nearest larger number made up of the digits of the original number

  core-js-conditions-n-loops optimal implementation
    √ optimal implementation of convertNumberToString
    √ speed test of sortByAsc
    √ speed test of shuffleChar
    √ speed test of getNearestBigger


  19 passing (58ms)

